name: CI/CD Workflow Action
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Build
        run: echo "Building... in progress"
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run tests
        run: bundle exec rspec
      - run: bundle exec rubocop
      - run: bundle exec brakeman
      - run: bundle exec bundler-audit
  verify:
    uses: setup-rails/setup-rails/.github/workflows/verify.yml@v1
    with:
      brakeman: true
      bundler-audit: true
      rspec: true
  brakeman-scan:
    permissions:
      contents: read
      security-events: write
    name: Brakeman Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
      # Customize the ruby version depending on your needs
      - name: Setup Ruby
        uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4
        with:
          ruby-version: '3.2.0'
      - name: Setup Brakeman
        env:
          BRAKEMAN_VERSION: '4.10'
        run: |
          gem install brakeman --version $BRAKEMAN_VERSION
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 3.2.0
        uses: ruby/setup-ruby@v1
        with:
            ruby-version: 3.2.0
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-rubocop-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-rubocop-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle config set without 'default doc job cable storage ujs test db'
          bundle install --jobs 4 --retry 3
      - name: Run RuboCop
        run: bundle exec rubocop --parallel
